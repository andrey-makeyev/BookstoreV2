plugins {
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'java'
    id 'com.github.node-gradle.node' version '7.0.2'
}

group = 'com.ecommerce'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.postgresql:postgresql'
    implementation 'org.hibernate:hibernate-core:6.5.0.Final'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

node {
    version = '18.20.3'
    npmVersion = '10.8.0'
    download = true
}

task npmInstallReact(type: NpmTask) {
    workingDir = file("${project.projectDir}/bookstore-frontend")
    args = ['install']
}

task buildReactApp(type: NpmTask) {
    dependsOn npmInstallReact
    workingDir = file("${project.projectDir}/bookstore-frontend")
    args = ['run', 'build']
}

task copyReactBuild(type: Copy) {
    dependsOn buildReactApp
    from "${project.projectDir}/bookstore-frontend/build"
    into "${project.projectDir}/src/main/resources/static"
}

tasks.named('processResources') {
    dependsOn copyReactBuild
}

bootRun {
    dependsOn copyReactBuild
    systemProperty 'server.port', '8080'
}